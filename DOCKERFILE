FROM ubuntu
LABEL authors="BWH-Genomics and Bioinformatics Hub" \
      description="Docker image containing all software requirements for the bwh-bioinformatics-hub/
nextflow-scRNAseq pipeline"

## Resolving R and lib dependencies
RUN apt-get update \
    && apt-get install -y \
    build-essential \
    libbz2-dev \
    libc6-dev \
    libgcc-9-dev \
    gcc-9-base \
    liblzma-dev \
    libssl-dev \
    libxml2-dev \
    libgit2-dev \
    zlib1g-dev \
    libcurl4-openssl-dev \
    libhdf5-dev \
    pandoc \
    libpng-dev \
    pkg-config \
    ## clean up
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/ \
    && rm -rf /tmp/downloaded_packages/ /tmp/*.rds
    
## Install packages from CRAN & BioConductor
RUN Rscript -e "install.packages(c('BiocManager', 'devtools', 'assertthat', 'cowplot', 'data.table', 'dplyr', 'ids', 'ggplot2', 'jsonlite', 'Matrix', 'optparse', 'purrr', 'R.utils', 'rmarkdown')); BiocManager::install(c('rhdf5', 'SingleCellExperiment', 'SummarizedExperiment'))" \
    ## clean up
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/ \
    && rm -rf /tmp/downloaded_packages/ /tmp/*.rds

## Install packages from github
COPY auth_token /tmp/auth_token
RUN export GITHUB_PAT=$(cat /tmp/auth_token) \
    && Rscript -e "devtools::install_github(repo = 'bwh-bioinformatics-hub/H5MANIPULATOR', auth_token = Sys.getenv('GITHUB_PAT')); devtools::install_github(repo = 'bwh-bioinformatics-hub/qcreporter', auth_token = Sys.getenv('GITHUB_PAT'))" \
    ## clean up
    && git clone git clone https://github.com/bwh-bioinformatics-hub/rna_seq_pipeline_bwh.git \
    && rm -rf /tmp/downloaded_packages/ /tmp/*.rds /tmp/auth_token
    
# Install the conda environment
COPY environment.yml /
RUN conda env create --quiet -f /environment.yml && conda clean -a

# Add conda installation dir to PATH (instead of doing 'conda activate')
ENV PATH /opt/conda/envs/scRNA_Pipeline/bin:$PATH

# Dump the details of the installed packages to a file for posterity
RUN conda env export --name scRNA_Pipeline > scRNA_Pipeline.yml

# Copy pre-downloaded cellranger file
ENV CELLRANGER_VER 7.0.1
COPY cellranger-$CELLRANGER_VER.tar.gz /opt/cellranger-$CELLRANGER_VER.tar.gz

# Install cellranger
RUN \
  cd /opt && \
  tar -xzvf cellranger-$CELLRANGER_VER.tar.gz && \
  export PATH=/opt/cellranger-$CELLRANGER_VER:$PATH && \
  ln -s /opt/cellranger-$CELLRANGER_VER/cellranger /usr/bin/cellranger && \
  rm -rf /opt/cellranger-$CELLRANGER_VER.tar.gz

# Instruct R processes to use these empty files instead of clashing with a local version
RUN touch .Rprofile
RUN touch .Renviron
